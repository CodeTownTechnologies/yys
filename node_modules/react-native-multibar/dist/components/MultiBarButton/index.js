"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const react_native_1 = require("react-native");
const context_1 = require("../../context");
const Styles_1 = require("./Styles");
exports.MultiBarButton = ({ children, style, onPress }) => {
    const { extrasVisible, setExtrasVisible } = React.useContext(context_1.MultiBarContext);
    const animated = React.useRef(new react_native_1.Animated.Value(0)).current;
    React.useEffect(() => {
        const animation = react_native_1.Animated.spring(animated, {
            toValue: extrasVisible ? 1 : 0,
            useNativeDriver: false
        });
        animation.start();
        return () => animation.stop();
    }, [extrasVisible]);
    const handlePress = React.useCallback(() => {
        if (!onPress || !onPress()) {
            setExtrasVisible(!extrasVisible);
        }
    }, [extrasVisible]);
    const rotateZ = animated.interpolate({
        inputRange: [0, 1],
        outputRange: ['0deg', '180deg']
    });
    return (<react_native_1.TouchableOpacity activeOpacity={0.9} onPress={handlePress}>
      <react_native_1.Animated.View style={[Styles_1.styles.contentContainer, {
            transform: [
                { rotateZ }
            ]
        }, style]}>
        {children}
      </react_native_1.Animated.View>
    </react_native_1.TouchableOpacity>);
};
